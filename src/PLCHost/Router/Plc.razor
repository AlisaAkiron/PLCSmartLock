@page "/plc"
@using S7.Net
@inject IPlcService PlcService

<PageTitle>PLC Smart Lock | PLC</PageTitle>

<div class="grid-center-items">

    <div class="grid-center-items">
        <h2>PLC 信息</h2>
    </div>

    <MDivider></MDivider>

    <MContainer Fluid>

        @foreach (var (label, textLabel, value) in ColumnInfos)
        {
            <ConfigurationRow Label="@label">
                <MTextField Disabled
                            Label="@textLabel"
                            Value="@value"></MTextField>
            </ConfigurationRow>
        }

    </MContainer>

    <MContainer Class="grid-center-items">
        <MRow Justify="JustifyTypes.Center">
            <MCol>
                <MButton Color="primary"
                         OnClick="ChangeInfoButtonClicked">
                    修改 PLC 连接信息
                </MButton>
            </MCol>
            <MCol>
                <MButton Color="success"
                         OnClick="StatusRefreshButtonClicked">刷新状态</MButton>
            </MCol>
        </MRow>
    </MContainer>

    <MContainer>
        <MRow Justify="JustifyTypes.Center">
            <MDialog @bind-Value="_dialog"
                     Transition="slide-y-reverse-transition"
                     Fullscreen>
                <ChildContent>
                    <MCard>
                        <MCardTitle>
                            修改 PLC 连接信息
                        </MCardTitle>
                        <MCardText>
                            <MContainer>
                                <ConfigurationRow Label="PLC IP">
                                    <MTextField Label="IP"
                                                @bind-Value="_inputPlcIp"></MTextField>
                                </ConfigurationRow>
                                <ConfigurationRow Label="PLC CPU TYPE">
                                    <MSelect @bind-Value="_inputPlcCpuType"
                                             Label="CPU TYPE"
                                             Items="_cpuTypeItems"
                                             ItemText="i => i.TypeString"
                                             ItemValue="i => i.Type"
                                             MenuProps="props => props.OffsetY = true"></MSelect>
                                </ConfigurationRow>
                                <ConfigurationRow Label="PLC RACK">
                                    <MTextField Label="RACK"
                                                @bind-Value="_inputPlcRack"></MTextField>
                                </ConfigurationRow>
                                <ConfigurationRow Label="PLC SLOT">
                                    <MTextField Label="SLOT"
                                                @bind-Value="_inputPlcSlot"></MTextField>
                                </ConfigurationRow>
                            </MContainer>
                        </MCardText>
                        <MCardActions>
                            <MSpacer></MSpacer>
                            <MButton Color="primary"
                                     OnClick="ChangePlcConnectionInfoCancelButtonClicked"
                                     Large>
                                取消
                            </MButton>
                            <MButton Color="success"
                                     OnClick="ChangePlcConnectionInfoButtonClicked"
                                     Large>
                                确认
                            </MButton>
                        </MCardActions>
                    </MCard>
                </ChildContent>
            </MDialog>
        </MRow>
    </MContainer>
</div>

@code {
    public record ColumnInfo(string Label, string TextLabel, string? Value);
    public record CpuTypeItem(string TypeString, string Type);

    private bool _plcConnectionStatus;
    private PlcInfo? _plcInfo;

    private bool _dialog;

    private string? _inputPlcIp;
    private string? _inputPlcCpuType;
    private short _inputPlcRack;
    private short _inputPlcSlot;

    private readonly List<CpuTypeItem> _cpuTypeItems = new()
    {
        new CpuTypeItem(CpuType.S7200.ToFormattedString(), CpuType.S7200.ToFormattedString()),
        new CpuTypeItem(CpuType.S7300.ToFormattedString(), CpuType.S7300.ToFormattedString()),
        new CpuTypeItem(CpuType.S7400.ToFormattedString(), CpuType.S7400.ToFormattedString()),
        new CpuTypeItem(CpuType.S71200.ToFormattedString(), CpuType.S71200.ToFormattedString()),
        new CpuTypeItem(CpuType.S71500.ToFormattedString(), CpuType.S71500.ToFormattedString()),
        new CpuTypeItem(CpuType.S7200Smart.ToFormattedString(), CpuType.S7200Smart.ToFormattedString()),
        new CpuTypeItem(CpuType.Logo0BA8.ToFormattedString(), CpuType.Logo0BA8.ToFormattedString()),
    };

    private List<ColumnInfo> ColumnInfos => new()
    {
        new ColumnInfo("PLC 连接状态", "PLC STATUS", _plcConnectionStatus ? "True" : "False"),
        new ColumnInfo("PLC IP 地址", "PLC IP", _plcInfo is null ? "NULL" : _plcInfo.Ip),
        new ColumnInfo("PLC CPU 类型", "PLC CPU TYPE", _plcInfo is null ? "NULL" : _plcInfo.CpuType),
        new ColumnInfo("PLC 机架编号", "PLC RACK", _plcInfo is null ? "NULL" : _plcInfo.Rack.ToString()),
        new ColumnInfo("PLC 插槽编号", "PLC SLOT", _plcInfo is null ? "NULL" : _plcInfo.Slot.ToString())
    };

    protected override void OnInitialized()
    {
        StatusRefreshButtonClicked();
    }

    private void StatusRefreshButtonClicked()
    {
        _plcInfo = PlcService.GetPlcConnectionInfo();
        _plcConnectionStatus = PlcService.GetPlcConnectionStatus();
    }

    private void ChangeInfoButtonClicked()
    {
        _dialog = true;
    }

    private async Task ChangePlcConnectionInfoButtonClicked()
    {
        var plcConnectionInfo = new PlcInfo
        {
            CpuType = _inputPlcCpuType,
            Ip = _inputPlcIp,
            Rack = _inputPlcRack,
            Slot = _inputPlcSlot
        };

        await PlcService.SetPlcConnectionInfo(plcConnectionInfo);
        await PlcService.Connect();

        StatusRefreshButtonClicked();
        ChangePlcConnectionInfoCancelButtonClicked();
    }

    private void ChangePlcConnectionInfoCancelButtonClicked()
    {
        _dialog = false;
    }
}
